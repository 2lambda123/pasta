/*
 * Copyright (c) 2023 Trail of Bits, Inc.
 */

// This file is auto-generated.

#include <pybind11/pybind11.h>

namespace pasta {
namespace py = pybind11;

void RegisterAllAST(py::module_ &m) {
void RegisterAttr(py::module_ &m);
  RegisterAttr(m);
void RegisterBuiltinAliasAttr(py::module_ &m);
  RegisterBuiltinAliasAttr(m);
void RegisterCalledOnceAttr(py::module_ &m);
  RegisterCalledOnceAttr(m);
void RegisterIFuncAttr(py::module_ &m);
  RegisterIFuncAttr(m);
void RegisterInheritableAttr(py::module_ &m);
  RegisterInheritableAttr(m);
void RegisterInheritableParamAttr(py::module_ &m);
  RegisterInheritableParamAttr(m);
void RegisterInitPriorityAttr(py::module_ &m);
  RegisterInitPriorityAttr(m);
void RegisterInitSegAttr(py::module_ &m);
  RegisterInitSegAttr(m);
void RegisterIntelOclBiccAttr(py::module_ &m);
  RegisterIntelOclBiccAttr(m);
void RegisterInternalLinkageAttr(py::module_ &m);
  RegisterInternalLinkageAttr(m);
void RegisterLTOVisibilityPublicAttr(py::module_ &m);
  RegisterLTOVisibilityPublicAttr(m);
void RegisterLayoutVersionAttr(py::module_ &m);
  RegisterLayoutVersionAttr(m);
void RegisterLeafAttr(py::module_ &m);
  RegisterLeafAttr(m);
void RegisterLifetimeBoundAttr(py::module_ &m);
  RegisterLifetimeBoundAttr(m);
void RegisterLoaderUninitializedAttr(py::module_ &m);
  RegisterLoaderUninitializedAttr(m);
void RegisterLockReturnedAttr(py::module_ &m);
  RegisterLockReturnedAttr(m);
void RegisterLocksExcludedAttr(py::module_ &m);
  RegisterLocksExcludedAttr(m);
void RegisterLoopHintAttr(py::module_ &m);
  RegisterLoopHintAttr(m);
void RegisterM68kInterruptAttr(py::module_ &m);
  RegisterM68kInterruptAttr(m);
void RegisterMIGServerRoutineAttr(py::module_ &m);
  RegisterMIGServerRoutineAttr(m);
void RegisterMSABIAttr(py::module_ &m);
  RegisterMSABIAttr(m);
void RegisterMSAllocatorAttr(py::module_ &m);
  RegisterMSAllocatorAttr(m);
void RegisterMSInheritanceAttr(py::module_ &m);
  RegisterMSInheritanceAttr(m);
void RegisterMSNoVTableAttr(py::module_ &m);
  RegisterMSNoVTableAttr(m);
void RegisterMSP430InterruptAttr(py::module_ &m);
  RegisterMSP430InterruptAttr(m);
void RegisterMSStructAttr(py::module_ &m);
  RegisterMSStructAttr(m);
void RegisterMSVtorDispAttr(py::module_ &m);
  RegisterMSVtorDispAttr(m);
void RegisterMaxFieldAlignmentAttr(py::module_ &m);
  RegisterMaxFieldAlignmentAttr(m);
void RegisterMayAliasAttr(py::module_ &m);
  RegisterMayAliasAttr(m);
void RegisterMaybeUndefAttr(py::module_ &m);
  RegisterMaybeUndefAttr(m);
void RegisterMicroMipsAttr(py::module_ &m);
  RegisterMicroMipsAttr(m);
void RegisterMinSizeAttr(py::module_ &m);
  RegisterMinSizeAttr(m);
void RegisterMinVectorWidthAttr(py::module_ &m);
  RegisterMinVectorWidthAttr(m);
void RegisterMips16Attr(py::module_ &m);
  RegisterMips16Attr(m);
void RegisterMipsInterruptAttr(py::module_ &m);
  RegisterMipsInterruptAttr(m);
void RegisterMipsLongCallAttr(py::module_ &m);
  RegisterMipsLongCallAttr(m);
void RegisterMipsShortCallAttr(py::module_ &m);
  RegisterMipsShortCallAttr(m);
void RegisterModeAttr(py::module_ &m);
  RegisterModeAttr(m);
void RegisterNSConsumedAttr(py::module_ &m);
  RegisterNSConsumedAttr(m);
void RegisterNSConsumesSelfAttr(py::module_ &m);
  RegisterNSConsumesSelfAttr(m);
void RegisterNSErrorDomainAttr(py::module_ &m);
  RegisterNSErrorDomainAttr(m);
void RegisterNSReturnsAutoreleasedAttr(py::module_ &m);
  RegisterNSReturnsAutoreleasedAttr(m);
void RegisterNSReturnsNotRetainedAttr(py::module_ &m);
  RegisterNSReturnsNotRetainedAttr(m);
void RegisterNSReturnsRetainedAttr(py::module_ &m);
  RegisterNSReturnsRetainedAttr(m);
void RegisterNakedAttr(py::module_ &m);
  RegisterNakedAttr(m);
void RegisterNoAliasAttr(py::module_ &m);
  RegisterNoAliasAttr(m);
void RegisterNoBuiltinAttr(py::module_ &m);
  RegisterNoBuiltinAttr(m);
void RegisterNoCommonAttr(py::module_ &m);
  RegisterNoCommonAttr(m);
void RegisterNoDebugAttr(py::module_ &m);
  RegisterNoDebugAttr(m);
void RegisterNoDestroyAttr(py::module_ &m);
  RegisterNoDestroyAttr(m);
void RegisterNoDuplicateAttr(py::module_ &m);
  RegisterNoDuplicateAttr(m);
void RegisterNoEscapeAttr(py::module_ &m);
  RegisterNoEscapeAttr(m);
void RegisterNoInstrumentFunctionAttr(py::module_ &m);
  RegisterNoInstrumentFunctionAttr(m);
void RegisterNoMicroMipsAttr(py::module_ &m);
  RegisterNoMicroMipsAttr(m);
void RegisterNoMips16Attr(py::module_ &m);
  RegisterNoMips16Attr(m);
void RegisterNoProfileFunctionAttr(py::module_ &m);
  RegisterNoProfileFunctionAttr(m);
void RegisterNoRandomizeLayoutAttr(py::module_ &m);
  RegisterNoRandomizeLayoutAttr(m);
void RegisterNoReturnAttr(py::module_ &m);
  RegisterNoReturnAttr(m);
void RegisterNoSanitizeAttr(py::module_ &m);
  RegisterNoSanitizeAttr(m);
void RegisterNoSpeculativeLoadHardeningAttr(py::module_ &m);
  RegisterNoSpeculativeLoadHardeningAttr(m);
void RegisterNoSplitStackAttr(py::module_ &m);
  RegisterNoSplitStackAttr(m);
void RegisterNoStackProtectorAttr(py::module_ &m);
  RegisterNoStackProtectorAttr(m);
void RegisterNoThreadSafetyAnalysisAttr(py::module_ &m);
  RegisterNoThreadSafetyAnalysisAttr(m);
void RegisterNoThrowAttr(py::module_ &m);
  RegisterNoThrowAttr(m);
void RegisterNoUniqueAddressAttr(py::module_ &m);
  RegisterNoUniqueAddressAttr(m);
void RegisterNoUwtableAttr(py::module_ &m);
  RegisterNoUwtableAttr(m);
void RegisterNonNullAttr(py::module_ &m);
  RegisterNonNullAttr(m);
void RegisterNotTailCalledAttr(py::module_ &m);
  RegisterNotTailCalledAttr(m);
void RegisterOMPAllocateDeclAttr(py::module_ &m);
  RegisterOMPAllocateDeclAttr(m);
void RegisterOMPCaptureKindAttr(py::module_ &m);
  RegisterOMPCaptureKindAttr(m);
void RegisterOMPCaptureNoInitAttr(py::module_ &m);
  RegisterOMPCaptureNoInitAttr(m);
void RegisterOMPDeclareSimdDeclAttr(py::module_ &m);
  RegisterOMPDeclareSimdDeclAttr(m);
void RegisterOMPDeclareTargetDeclAttr(py::module_ &m);
  RegisterOMPDeclareTargetDeclAttr(m);
void RegisterOMPDeclareVariantAttr(py::module_ &m);
  RegisterOMPDeclareVariantAttr(m);
void RegisterOMPReferencedVarAttr(py::module_ &m);
  RegisterOMPReferencedVarAttr(m);
void RegisterOMPThreadPrivateDeclAttr(py::module_ &m);
  RegisterOMPThreadPrivateDeclAttr(m);
void RegisterOSConsumedAttr(py::module_ &m);
  RegisterOSConsumedAttr(m);
void RegisterOSConsumesThisAttr(py::module_ &m);
  RegisterOSConsumesThisAttr(m);
void RegisterOSReturnsNotRetainedAttr(py::module_ &m);
  RegisterOSReturnsNotRetainedAttr(m);
void RegisterOSReturnsRetainedAttr(py::module_ &m);
  RegisterOSReturnsRetainedAttr(m);
void RegisterOSReturnsRetainedOnNonZeroAttr(py::module_ &m);
  RegisterOSReturnsRetainedOnNonZeroAttr(m);
void RegisterOSReturnsRetainedOnZeroAttr(py::module_ &m);
  RegisterOSReturnsRetainedOnZeroAttr(m);
void RegisterObjCBoxableAttr(py::module_ &m);
  RegisterObjCBoxableAttr(m);
void RegisterObjCBridgeAttr(py::module_ &m);
  RegisterObjCBridgeAttr(m);
void RegisterObjCBridgeMutableAttr(py::module_ &m);
  RegisterObjCBridgeMutableAttr(m);
void RegisterObjCBridgeRelatedAttr(py::module_ &m);
  RegisterObjCBridgeRelatedAttr(m);
void RegisterObjCClassStubAttr(py::module_ &m);
  RegisterObjCClassStubAttr(m);
void RegisterObjCDesignatedInitializerAttr(py::module_ &m);
  RegisterObjCDesignatedInitializerAttr(m);
void RegisterObjCDirectAttr(py::module_ &m);
  RegisterObjCDirectAttr(m);
void RegisterObjCDirectMembersAttr(py::module_ &m);
  RegisterObjCDirectMembersAttr(m);
void RegisterObjCExceptionAttr(py::module_ &m);
  RegisterObjCExceptionAttr(m);
void RegisterObjCExplicitProtocolImplAttr(py::module_ &m);
  RegisterObjCExplicitProtocolImplAttr(m);
void RegisterObjCExternallyRetainedAttr(py::module_ &m);
  RegisterObjCExternallyRetainedAttr(m);
void RegisterObjCIndependentClassAttr(py::module_ &m);
  RegisterObjCIndependentClassAttr(m);
void RegisterObjCMethodFamilyAttr(py::module_ &m);
  RegisterObjCMethodFamilyAttr(m);
void RegisterObjCNSObjectAttr(py::module_ &m);
  RegisterObjCNSObjectAttr(m);
void RegisterObjCNonLazyClassAttr(py::module_ &m);
  RegisterObjCNonLazyClassAttr(m);
void RegisterObjCNonRuntimeProtocolAttr(py::module_ &m);
  RegisterObjCNonRuntimeProtocolAttr(m);
void RegisterObjCOwnershipAttr(py::module_ &m);
  RegisterObjCOwnershipAttr(m);
void RegisterObjCPreciseLifetimeAttr(py::module_ &m);
  RegisterObjCPreciseLifetimeAttr(m);
void RegisterObjCRequiresPropertyDefsAttr(py::module_ &m);
  RegisterObjCRequiresPropertyDefsAttr(m);
void RegisterObjCRequiresSuperAttr(py::module_ &m);
  RegisterObjCRequiresSuperAttr(m);
void RegisterObjCReturnsInnerPointerAttr(py::module_ &m);
  RegisterObjCReturnsInnerPointerAttr(m);
void RegisterObjCRootClassAttr(py::module_ &m);
  RegisterObjCRootClassAttr(m);
void RegisterObjCRuntimeNameAttr(py::module_ &m);
  RegisterObjCRuntimeNameAttr(m);
void RegisterObjCRuntimeVisibleAttr(py::module_ &m);
  RegisterObjCRuntimeVisibleAttr(m);
void RegisterObjCSubclassingRestrictedAttr(py::module_ &m);
  RegisterObjCSubclassingRestrictedAttr(m);
void RegisterOpenCLAccessAttr(py::module_ &m);
  RegisterOpenCLAccessAttr(m);
void RegisterOpenCLIntelReqdSubGroupSizeAttr(py::module_ &m);
  RegisterOpenCLIntelReqdSubGroupSizeAttr(m);
void RegisterOpenCLKernelAttr(py::module_ &m);
  RegisterOpenCLKernelAttr(m);
void RegisterOptimizeNoneAttr(py::module_ &m);
  RegisterOptimizeNoneAttr(m);
void RegisterOverloadableAttr(py::module_ &m);
  RegisterOverloadableAttr(m);
void RegisterOverrideAttr(py::module_ &m);
  RegisterOverrideAttr(m);
void RegisterOwnerAttr(py::module_ &m);
  RegisterOwnerAttr(m);
void RegisterOwnershipAttr(py::module_ &m);
  RegisterOwnershipAttr(m);
void RegisterPackedAttr(py::module_ &m);
  RegisterPackedAttr(m);
void RegisterParamTypestateAttr(py::module_ &m);
  RegisterParamTypestateAttr(m);
void RegisterParameterABIAttr(py::module_ &m);
  RegisterParameterABIAttr(m);
void RegisterPascalAttr(py::module_ &m);
  RegisterPascalAttr(m);
void RegisterPassObjectSizeAttr(py::module_ &m);
  RegisterPassObjectSizeAttr(m);
void RegisterPatchableFunctionEntryAttr(py::module_ &m);
  RegisterPatchableFunctionEntryAttr(m);
void RegisterPcsAttr(py::module_ &m);
  RegisterPcsAttr(m);
void RegisterPointerAttr(py::module_ &m);
  RegisterPointerAttr(m);
void RegisterPragmaClangBSSSectionAttr(py::module_ &m);
  RegisterPragmaClangBSSSectionAttr(m);
void RegisterPragmaClangDataSectionAttr(py::module_ &m);
  RegisterPragmaClangDataSectionAttr(m);
void RegisterPragmaClangRelroSectionAttr(py::module_ &m);
  RegisterPragmaClangRelroSectionAttr(m);
void RegisterPragmaClangRodataSectionAttr(py::module_ &m);
  RegisterPragmaClangRodataSectionAttr(m);
void RegisterPragmaClangTextSectionAttr(py::module_ &m);
  RegisterPragmaClangTextSectionAttr(m);
void RegisterPreferredNameAttr(py::module_ &m);
  RegisterPreferredNameAttr(m);
void RegisterPreserveAllAttr(py::module_ &m);
  RegisterPreserveAllAttr(m);
void RegisterPreserveMostAttr(py::module_ &m);
  RegisterPreserveMostAttr(m);
void RegisterPtGuardedByAttr(py::module_ &m);
  RegisterPtGuardedByAttr(m);
void RegisterPtGuardedVarAttr(py::module_ &m);
  RegisterPtGuardedVarAttr(m);
void RegisterPureAttr(py::module_ &m);
  RegisterPureAttr(m);
void RegisterRISCVInterruptAttr(py::module_ &m);
  RegisterRISCVInterruptAttr(m);
void RegisterRandomizeLayoutAttr(py::module_ &m);
  RegisterRandomizeLayoutAttr(m);
void RegisterReadOnlyPlacementAttr(py::module_ &m);
  RegisterReadOnlyPlacementAttr(m);
void RegisterRegCallAttr(py::module_ &m);
  RegisterRegCallAttr(m);
void RegisterReinitializesAttr(py::module_ &m);
  RegisterReinitializesAttr(m);
void RegisterReleaseCapabilityAttr(py::module_ &m);
  RegisterReleaseCapabilityAttr(m);
void RegisterReleaseHandleAttr(py::module_ &m);
  RegisterReleaseHandleAttr(m);
void RegisterRenderScriptKernelAttr(py::module_ &m);
  RegisterRenderScriptKernelAttr(m);
void RegisterReqdWorkGroupSizeAttr(py::module_ &m);
  RegisterReqdWorkGroupSizeAttr(m);
void RegisterRequiresCapabilityAttr(py::module_ &m);
  RegisterRequiresCapabilityAttr(m);
void RegisterRestrictAttr(py::module_ &m);
  RegisterRestrictAttr(m);
void RegisterRetainAttr(py::module_ &m);
  RegisterRetainAttr(m);
void RegisterReturnTypestateAttr(py::module_ &m);
  RegisterReturnTypestateAttr(m);
void RegisterReturnsNonNullAttr(py::module_ &m);
  RegisterReturnsNonNullAttr(m);
void RegisterReturnsTwiceAttr(py::module_ &m);
  RegisterReturnsTwiceAttr(m);
void RegisterSYCLKernelAttr(py::module_ &m);
  RegisterSYCLKernelAttr(m);
void RegisterSYCLSpecialClassAttr(py::module_ &m);
  RegisterSYCLSpecialClassAttr(m);
void RegisterScopedLockableAttr(py::module_ &m);
  RegisterScopedLockableAttr(m);
void RegisterSectionAttr(py::module_ &m);
  RegisterSectionAttr(m);
void RegisterSelectAnyAttr(py::module_ &m);
  RegisterSelectAnyAttr(m);
void RegisterSentinelAttr(py::module_ &m);
  RegisterSentinelAttr(m);
void RegisterSetTypestateAttr(py::module_ &m);
  RegisterSetTypestateAttr(m);
void RegisterSharedTrylockFunctionAttr(py::module_ &m);
  RegisterSharedTrylockFunctionAttr(m);
void RegisterSpeculativeLoadHardeningAttr(py::module_ &m);
  RegisterSpeculativeLoadHardeningAttr(m);
void RegisterStandaloneDebugAttr(py::module_ &m);
  RegisterStandaloneDebugAttr(m);
void RegisterStdCallAttr(py::module_ &m);
  RegisterStdCallAttr(m);
void RegisterStmtAttr(py::module_ &m);
  RegisterStmtAttr(m);
void RegisterStrictFPAttr(py::module_ &m);
  RegisterStrictFPAttr(m);
void RegisterStrictGuardStackCheckAttr(py::module_ &m);
  RegisterStrictGuardStackCheckAttr(m);
void RegisterSuppressAttr(py::module_ &m);
  RegisterSuppressAttr(m);
void RegisterSwiftAsyncAttr(py::module_ &m);
  RegisterSwiftAsyncAttr(m);
void RegisterSwiftAsyncCallAttr(py::module_ &m);
  RegisterSwiftAsyncCallAttr(m);
void RegisterSwiftAsyncContextAttr(py::module_ &m);
  RegisterSwiftAsyncContextAttr(m);
void RegisterSwiftAsyncErrorAttr(py::module_ &m);
  RegisterSwiftAsyncErrorAttr(m);
void RegisterSwiftAsyncNameAttr(py::module_ &m);
  RegisterSwiftAsyncNameAttr(m);
void RegisterSwiftAttrAttr(py::module_ &m);
  RegisterSwiftAttrAttr(m);
void RegisterSwiftBridgeAttr(py::module_ &m);
  RegisterSwiftBridgeAttr(m);
void RegisterSwiftBridgedTypedefAttr(py::module_ &m);
  RegisterSwiftBridgedTypedefAttr(m);
void RegisterSwiftCallAttr(py::module_ &m);
  RegisterSwiftCallAttr(m);
void RegisterSwiftContextAttr(py::module_ &m);
  RegisterSwiftContextAttr(m);
void RegisterSwiftErrorAttr(py::module_ &m);
  RegisterSwiftErrorAttr(m);
void RegisterSwiftErrorResultAttr(py::module_ &m);
  RegisterSwiftErrorResultAttr(m);
void RegisterSwiftIndirectResultAttr(py::module_ &m);
  RegisterSwiftIndirectResultAttr(m);
void RegisterSwiftNameAttr(py::module_ &m);
  RegisterSwiftNameAttr(m);
void RegisterSwiftNewTypeAttr(py::module_ &m);
  RegisterSwiftNewTypeAttr(m);
void RegisterSwiftObjCMembersAttr(py::module_ &m);
  RegisterSwiftObjCMembersAttr(m);
void RegisterSwiftPrivateAttr(py::module_ &m);
  RegisterSwiftPrivateAttr(m);
void RegisterSysVABIAttr(py::module_ &m);
  RegisterSysVABIAttr(m);
void RegisterTLSModelAttr(py::module_ &m);
  RegisterTLSModelAttr(m);
void RegisterTargetAttr(py::module_ &m);
  RegisterTargetAttr(m);
void RegisterTargetClonesAttr(py::module_ &m);
  RegisterTargetClonesAttr(m);
void RegisterTargetVersionAttr(py::module_ &m);
  RegisterTargetVersionAttr(m);
void RegisterTestTypestateAttr(py::module_ &m);
  RegisterTestTypestateAttr(m);
void RegisterThisCallAttr(py::module_ &m);
  RegisterThisCallAttr(m);
void RegisterThreadAttr(py::module_ &m);
  RegisterThreadAttr(m);
void RegisterTransparentUnionAttr(py::module_ &m);
  RegisterTransparentUnionAttr(m);
void RegisterTrivialABIAttr(py::module_ &m);
  RegisterTrivialABIAttr(m);
void RegisterTryAcquireCapabilityAttr(py::module_ &m);
  RegisterTryAcquireCapabilityAttr(m);
void RegisterTypeAttr(py::module_ &m);
  RegisterTypeAttr(m);
void RegisterTypeNonNullAttr(py::module_ &m);
  RegisterTypeNonNullAttr(m);
void RegisterTypeNullUnspecifiedAttr(py::module_ &m);
  RegisterTypeNullUnspecifiedAttr(m);
void RegisterTypeNullableAttr(py::module_ &m);
  RegisterTypeNullableAttr(m);
void RegisterTypeNullableResultAttr(py::module_ &m);
  RegisterTypeNullableResultAttr(m);
void RegisterTypeTagForDatatypeAttr(py::module_ &m);
  RegisterTypeTagForDatatypeAttr(m);
void RegisterTypeVisibilityAttr(py::module_ &m);
  RegisterTypeVisibilityAttr(m);
void RegisterUPtrAttr(py::module_ &m);
  RegisterUPtrAttr(m);
void RegisterUnavailableAttr(py::module_ &m);
  RegisterUnavailableAttr(m);
void RegisterUninitializedAttr(py::module_ &m);
  RegisterUninitializedAttr(m);
void RegisterUnlikelyAttr(py::module_ &m);
  RegisterUnlikelyAttr(m);
void RegisterUnusedAttr(py::module_ &m);
  RegisterUnusedAttr(m);
void RegisterUseHandleAttr(py::module_ &m);
  RegisterUseHandleAttr(m);
void RegisterUsedAttr(py::module_ &m);
  RegisterUsedAttr(m);
void RegisterUsingIfExistsAttr(py::module_ &m);
  RegisterUsingIfExistsAttr(m);
void RegisterUuidAttr(py::module_ &m);
  RegisterUuidAttr(m);
void RegisterVecReturnAttr(py::module_ &m);
  RegisterVecReturnAttr(m);
void RegisterVecTypeHintAttr(py::module_ &m);
  RegisterVecTypeHintAttr(m);
void RegisterVectorCallAttr(py::module_ &m);
  RegisterVectorCallAttr(m);
void RegisterVisibilityAttr(py::module_ &m);
  RegisterVisibilityAttr(m);
void RegisterWarnUnusedAttr(py::module_ &m);
  RegisterWarnUnusedAttr(m);
void RegisterWarnUnusedResultAttr(py::module_ &m);
  RegisterWarnUnusedResultAttr(m);
void RegisterWeakAttr(py::module_ &m);
  RegisterWeakAttr(m);
void RegisterWeakImportAttr(py::module_ &m);
  RegisterWeakImportAttr(m);
void RegisterWeakRefAttr(py::module_ &m);
  RegisterWeakRefAttr(m);
void RegisterWebAssemblyExportNameAttr(py::module_ &m);
  RegisterWebAssemblyExportNameAttr(m);
void RegisterWebAssemblyImportModuleAttr(py::module_ &m);
  RegisterWebAssemblyImportModuleAttr(m);
void RegisterWebAssemblyImportNameAttr(py::module_ &m);
  RegisterWebAssemblyImportNameAttr(m);
void RegisterWorkGroupSizeHintAttr(py::module_ &m);
  RegisterWorkGroupSizeHintAttr(m);
void RegisterX86ForceAlignArgPointerAttr(py::module_ &m);
  RegisterX86ForceAlignArgPointerAttr(m);
void RegisterXRayInstrumentAttr(py::module_ &m);
  RegisterXRayInstrumentAttr(m);
void RegisterXRayLogArgsAttr(py::module_ &m);
  RegisterXRayLogArgsAttr(m);
void RegisterZeroCallUsedRegsAttr(py::module_ &m);
  RegisterZeroCallUsedRegsAttr(m);
void RegisterAArch64SVEPcsAttr(py::module_ &m);
  RegisterAArch64SVEPcsAttr(m);
void RegisterAArch64VectorPcsAttr(py::module_ &m);
  RegisterAArch64VectorPcsAttr(m);
void RegisterAMDGPUFlatWorkGroupSizeAttr(py::module_ &m);
  RegisterAMDGPUFlatWorkGroupSizeAttr(m);
void RegisterAMDGPUKernelCallAttr(py::module_ &m);
  RegisterAMDGPUKernelCallAttr(m);
void RegisterAMDGPUNumSGPRAttr(py::module_ &m);
  RegisterAMDGPUNumSGPRAttr(m);
void RegisterAMDGPUNumVGPRAttr(py::module_ &m);
  RegisterAMDGPUNumVGPRAttr(m);
void RegisterAMDGPUWavesPerEUAttr(py::module_ &m);
  RegisterAMDGPUWavesPerEUAttr(m);
void RegisterARMInterruptAttr(py::module_ &m);
  RegisterARMInterruptAttr(m);
void RegisterAVRInterruptAttr(py::module_ &m);
  RegisterAVRInterruptAttr(m);
void RegisterAVRSignalAttr(py::module_ &m);
  RegisterAVRSignalAttr(m);
void RegisterAbiTagAttr(py::module_ &m);
  RegisterAbiTagAttr(m);
void RegisterAcquireCapabilityAttr(py::module_ &m);
  RegisterAcquireCapabilityAttr(m);
void RegisterAcquireHandleAttr(py::module_ &m);
  RegisterAcquireHandleAttr(m);
void RegisterAcquiredAfterAttr(py::module_ &m);
  RegisterAcquiredAfterAttr(m);
void RegisterAcquiredBeforeAttr(py::module_ &m);
  RegisterAcquiredBeforeAttr(m);
void RegisterAddressSpaceAttr(py::module_ &m);
  RegisterAddressSpaceAttr(m);
void RegisterAliasAttr(py::module_ &m);
  RegisterAliasAttr(m);
void RegisterAlignMac68kAttr(py::module_ &m);
  RegisterAlignMac68kAttr(m);
void RegisterAlignNaturalAttr(py::module_ &m);
  RegisterAlignNaturalAttr(m);
void RegisterAlignValueAttr(py::module_ &m);
  RegisterAlignValueAttr(m);
void RegisterAlignedAttr(py::module_ &m);
  RegisterAlignedAttr(m);
void RegisterAllocAlignAttr(py::module_ &m);
  RegisterAllocAlignAttr(m);
void RegisterAllocSizeAttr(py::module_ &m);
  RegisterAllocSizeAttr(m);
void RegisterAlwaysDestroyAttr(py::module_ &m);
  RegisterAlwaysDestroyAttr(m);
void RegisterAnalyzerNoReturnAttr(py::module_ &m);
  RegisterAnalyzerNoReturnAttr(m);
void RegisterAnnotateAttr(py::module_ &m);
  RegisterAnnotateAttr(m);
void RegisterAnnotateTypeAttr(py::module_ &m);
  RegisterAnnotateTypeAttr(m);
void RegisterAnyX86InterruptAttr(py::module_ &m);
  RegisterAnyX86InterruptAttr(m);
void RegisterAnyX86NoCallerSavedRegistersAttr(py::module_ &m);
  RegisterAnyX86NoCallerSavedRegistersAttr(m);
void RegisterAnyX86NoCfCheckAttr(py::module_ &m);
  RegisterAnyX86NoCfCheckAttr(m);
void RegisterArcWeakrefUnavailableAttr(py::module_ &m);
  RegisterArcWeakrefUnavailableAttr(m);
void RegisterArgumentWithTypeTagAttr(py::module_ &m);
  RegisterArgumentWithTypeTagAttr(m);
void RegisterArmBuiltinAliasAttr(py::module_ &m);
  RegisterArmBuiltinAliasAttr(m);
void RegisterArmMveStrictPolymorphismAttr(py::module_ &m);
  RegisterArmMveStrictPolymorphismAttr(m);
void RegisterArtificialAttr(py::module_ &m);
  RegisterArtificialAttr(m);
void RegisterAsmLabelAttr(py::module_ &m);
  RegisterAsmLabelAttr(m);
void RegisterAssertCapabilityAttr(py::module_ &m);
  RegisterAssertCapabilityAttr(m);
void RegisterAssertExclusiveLockAttr(py::module_ &m);
  RegisterAssertExclusiveLockAttr(m);
void RegisterAssertSharedLockAttr(py::module_ &m);
  RegisterAssertSharedLockAttr(m);
void RegisterAssumeAlignedAttr(py::module_ &m);
  RegisterAssumeAlignedAttr(m);
void RegisterAssumptionAttr(py::module_ &m);
  RegisterAssumptionAttr(m);
void RegisterAvailabilityAttr(py::module_ &m);
  RegisterAvailabilityAttr(m);
void RegisterBPFPreserveAccessIndexAttr(py::module_ &m);
  RegisterBPFPreserveAccessIndexAttr(m);
void RegisterBTFDeclTagAttr(py::module_ &m);
  RegisterBTFDeclTagAttr(m);
void RegisterBTFTypeTagAttr(py::module_ &m);
  RegisterBTFTypeTagAttr(m);
void RegisterBlocksAttr(py::module_ &m);
  RegisterBlocksAttr(m);
void RegisterBuiltinAttr(py::module_ &m);
  RegisterBuiltinAttr(m);
void RegisterC11NoReturnAttr(py::module_ &m);
  RegisterC11NoReturnAttr(m);
void RegisterCDeclAttr(py::module_ &m);
  RegisterCDeclAttr(m);
void RegisterCFAuditedTransferAttr(py::module_ &m);
  RegisterCFAuditedTransferAttr(m);
void RegisterCFConsumedAttr(py::module_ &m);
  RegisterCFConsumedAttr(m);
void RegisterCFGuardAttr(py::module_ &m);
  RegisterCFGuardAttr(m);
void RegisterCFICanonicalJumpTableAttr(py::module_ &m);
  RegisterCFICanonicalJumpTableAttr(m);
void RegisterCFReturnsNotRetainedAttr(py::module_ &m);
  RegisterCFReturnsNotRetainedAttr(m);
void RegisterCFReturnsRetainedAttr(py::module_ &m);
  RegisterCFReturnsRetainedAttr(m);
void RegisterCFUnknownTransferAttr(py::module_ &m);
  RegisterCFUnknownTransferAttr(m);
void RegisterCPUDispatchAttr(py::module_ &m);
  RegisterCPUDispatchAttr(m);
void RegisterCPUSpecificAttr(py::module_ &m);
  RegisterCPUSpecificAttr(m);
void RegisterCUDAConstantAttr(py::module_ &m);
  RegisterCUDAConstantAttr(m);
void RegisterCUDADeviceAttr(py::module_ &m);
  RegisterCUDADeviceAttr(m);
void RegisterCUDADeviceBuiltinSurfaceTypeAttr(py::module_ &m);
  RegisterCUDADeviceBuiltinSurfaceTypeAttr(m);
void RegisterCUDADeviceBuiltinTextureTypeAttr(py::module_ &m);
  RegisterCUDADeviceBuiltinTextureTypeAttr(m);
void RegisterCUDAGlobalAttr(py::module_ &m);
  RegisterCUDAGlobalAttr(m);
void RegisterCUDAHostAttr(py::module_ &m);
  RegisterCUDAHostAttr(m);
void RegisterCUDAInvalidTargetAttr(py::module_ &m);
  RegisterCUDAInvalidTargetAttr(m);
void RegisterCUDALaunchBoundsAttr(py::module_ &m);
  RegisterCUDALaunchBoundsAttr(m);
void RegisterCUDASharedAttr(py::module_ &m);
  RegisterCUDASharedAttr(m);
void RegisterCXX11NoReturnAttr(py::module_ &m);
  RegisterCXX11NoReturnAttr(m);
void RegisterCallableWhenAttr(py::module_ &m);
  RegisterCallableWhenAttr(m);
void RegisterCallbackAttr(py::module_ &m);
  RegisterCallbackAttr(m);
void RegisterCapabilityAttr(py::module_ &m);
  RegisterCapabilityAttr(m);
void RegisterCapturedRecordAttr(py::module_ &m);
  RegisterCapturedRecordAttr(m);
void RegisterCarriesDependencyAttr(py::module_ &m);
  RegisterCarriesDependencyAttr(m);
void RegisterCleanupAttr(py::module_ &m);
  RegisterCleanupAttr(m);
void RegisterCmseNSCallAttr(py::module_ &m);
  RegisterCmseNSCallAttr(m);
void RegisterCmseNSEntryAttr(py::module_ &m);
  RegisterCmseNSEntryAttr(m);
void RegisterCodeSegAttr(py::module_ &m);
  RegisterCodeSegAttr(m);
void RegisterColdAttr(py::module_ &m);
  RegisterColdAttr(m);
void RegisterCommonAttr(py::module_ &m);
  RegisterCommonAttr(m);
void RegisterConstAttr(py::module_ &m);
  RegisterConstAttr(m);
void RegisterConstInitAttr(py::module_ &m);
  RegisterConstInitAttr(m);
void RegisterConstructorAttr(py::module_ &m);
  RegisterConstructorAttr(m);
void RegisterConsumableAttr(py::module_ &m);
  RegisterConsumableAttr(m);
void RegisterConsumableAutoCastAttr(py::module_ &m);
  RegisterConsumableAutoCastAttr(m);
void RegisterConsumableSetOnReadAttr(py::module_ &m);
  RegisterConsumableSetOnReadAttr(m);
void RegisterConvergentAttr(py::module_ &m);
  RegisterConvergentAttr(m);
void RegisterDLLExportAttr(py::module_ &m);
  RegisterDLLExportAttr(m);
void RegisterDLLExportStaticLocalAttr(py::module_ &m);
  RegisterDLLExportStaticLocalAttr(m);
void RegisterDLLImportAttr(py::module_ &m);
  RegisterDLLImportAttr(m);
void RegisterDLLImportStaticLocalAttr(py::module_ &m);
  RegisterDLLImportStaticLocalAttr(m);
void RegisterDeclOrStmtAttr(py::module_ &m);
  RegisterDeclOrStmtAttr(m);
void RegisterDeprecatedAttr(py::module_ &m);
  RegisterDeprecatedAttr(m);
void RegisterDestructorAttr(py::module_ &m);
  RegisterDestructorAttr(m);
void RegisterDiagnoseAsBuiltinAttr(py::module_ &m);
  RegisterDiagnoseAsBuiltinAttr(m);
void RegisterDiagnoseIfAttr(py::module_ &m);
  RegisterDiagnoseIfAttr(m);
void RegisterDisableSanitizerInstrumentationAttr(py::module_ &m);
  RegisterDisableSanitizerInstrumentationAttr(m);
void RegisterDisableTailCallsAttr(py::module_ &m);
  RegisterDisableTailCallsAttr(m);
void RegisterEmptyBasesAttr(py::module_ &m);
  RegisterEmptyBasesAttr(m);
void RegisterEnableIfAttr(py::module_ &m);
  RegisterEnableIfAttr(m);
void RegisterEnforceTCBAttr(py::module_ &m);
  RegisterEnforceTCBAttr(m);
void RegisterEnforceTCBLeafAttr(py::module_ &m);
  RegisterEnforceTCBLeafAttr(m);
void RegisterEnumExtensibilityAttr(py::module_ &m);
  RegisterEnumExtensibilityAttr(m);
void RegisterErrorAttr(py::module_ &m);
  RegisterErrorAttr(m);
void RegisterExcludeFromExplicitInstantiationAttr(py::module_ &m);
  RegisterExcludeFromExplicitInstantiationAttr(m);
void RegisterExclusiveTrylockFunctionAttr(py::module_ &m);
  RegisterExclusiveTrylockFunctionAttr(m);
void RegisterExternalSourceSymbolAttr(py::module_ &m);
  RegisterExternalSourceSymbolAttr(m);
void RegisterFallThroughAttr(py::module_ &m);
  RegisterFallThroughAttr(m);
void RegisterFastCallAttr(py::module_ &m);
  RegisterFastCallAttr(m);
void RegisterFinalAttr(py::module_ &m);
  RegisterFinalAttr(m);
void RegisterFlagEnumAttr(py::module_ &m);
  RegisterFlagEnumAttr(m);
void RegisterFlattenAttr(py::module_ &m);
  RegisterFlattenAttr(m);
void RegisterFormatArgAttr(py::module_ &m);
  RegisterFormatArgAttr(m);
void RegisterFormatAttr(py::module_ &m);
  RegisterFormatAttr(m);
void RegisterFunctionReturnThunksAttr(py::module_ &m);
  RegisterFunctionReturnThunksAttr(m);
void RegisterGNUInlineAttr(py::module_ &m);
  RegisterGNUInlineAttr(m);
void RegisterGuardedByAttr(py::module_ &m);
  RegisterGuardedByAttr(m);
void RegisterGuardedVarAttr(py::module_ &m);
  RegisterGuardedVarAttr(m);
void RegisterHIPManagedAttr(py::module_ &m);
  RegisterHIPManagedAttr(m);
void RegisterHLSLAnnotationAttr(py::module_ &m);
  RegisterHLSLAnnotationAttr(m);
void RegisterHLSLGroupSharedAddressSpaceAttr(py::module_ &m);
  RegisterHLSLGroupSharedAddressSpaceAttr(m);
void RegisterHLSLNumThreadsAttr(py::module_ &m);
  RegisterHLSLNumThreadsAttr(m);
void RegisterHLSLResourceAttr(py::module_ &m);
  RegisterHLSLResourceAttr(m);
void RegisterHLSLResourceBindingAttr(py::module_ &m);
  RegisterHLSLResourceBindingAttr(m);
void RegisterHLSLSV_DispatchThreadIDAttr(py::module_ &m);
  RegisterHLSLSV_DispatchThreadIDAttr(m);
void RegisterHLSLSV_GroupIndexAttr(py::module_ &m);
  RegisterHLSLSV_GroupIndexAttr(m);
void RegisterHLSLShaderAttr(py::module_ &m);
  RegisterHLSLShaderAttr(m);
void RegisterHotAttr(py::module_ &m);
  RegisterHotAttr(m);
void RegisterIBActionAttr(py::module_ &m);
  RegisterIBActionAttr(m);
void RegisterIBOutletAttr(py::module_ &m);
  RegisterIBOutletAttr(m);
void RegisterIBOutletCollectionAttr(py::module_ &m);
  RegisterIBOutletCollectionAttr(m);
void RegisterLikelyAttr(py::module_ &m);
  RegisterLikelyAttr(m);
void RegisterMustTailAttr(py::module_ &m);
  RegisterMustTailAttr(m);
void RegisterNoDerefAttr(py::module_ &m);
  RegisterNoDerefAttr(m);
void RegisterNoInlineAttr(py::module_ &m);
  RegisterNoInlineAttr(m);
void RegisterNoMergeAttr(py::module_ &m);
  RegisterNoMergeAttr(m);
void RegisterObjCGCAttr(py::module_ &m);
  RegisterObjCGCAttr(m);
void RegisterObjCInertUnsafeUnretainedAttr(py::module_ &m);
  RegisterObjCInertUnsafeUnretainedAttr(m);
void RegisterObjCKindOfAttr(py::module_ &m);
  RegisterObjCKindOfAttr(m);
void RegisterOpenCLConstantAddressSpaceAttr(py::module_ &m);
  RegisterOpenCLConstantAddressSpaceAttr(m);
void RegisterOpenCLGenericAddressSpaceAttr(py::module_ &m);
  RegisterOpenCLGenericAddressSpaceAttr(m);
void RegisterOpenCLGlobalAddressSpaceAttr(py::module_ &m);
  RegisterOpenCLGlobalAddressSpaceAttr(m);
void RegisterOpenCLGlobalDeviceAddressSpaceAttr(py::module_ &m);
  RegisterOpenCLGlobalDeviceAddressSpaceAttr(m);
void RegisterOpenCLGlobalHostAddressSpaceAttr(py::module_ &m);
  RegisterOpenCLGlobalHostAddressSpaceAttr(m);
void RegisterOpenCLLocalAddressSpaceAttr(py::module_ &m);
  RegisterOpenCLLocalAddressSpaceAttr(m);
void RegisterOpenCLPrivateAddressSpaceAttr(py::module_ &m);
  RegisterOpenCLPrivateAddressSpaceAttr(m);
void RegisterOpenCLUnrollHintAttr(py::module_ &m);
  RegisterOpenCLUnrollHintAttr(m);
void RegisterPtr32Attr(py::module_ &m);
  RegisterPtr32Attr(m);
void RegisterPtr64Attr(py::module_ &m);
  RegisterPtr64Attr(m);
void RegisterSPtrAttr(py::module_ &m);
  RegisterSPtrAttr(m);
void RegisterAlwaysInlineAttr(py::module_ &m);
  RegisterAlwaysInlineAttr(m);
void RegisterStmt(py::module_ &m);
  RegisterStmt(m);
void RegisterSwitchCase(py::module_ &m);
  RegisterSwitchCase(m);
void RegisterSwitchStmt(py::module_ &m);
  RegisterSwitchStmt(m);
void RegisterValueStmt(py::module_ &m);
  RegisterValueStmt(m);
void RegisterWhileStmt(py::module_ &m);
  RegisterWhileStmt(m);
void RegisterAsmStmt(py::module_ &m);
  RegisterAsmStmt(m);
void RegisterAttributedStmt(py::module_ &m);
  RegisterAttributedStmt(m);
void RegisterBreakStmt(py::module_ &m);
  RegisterBreakStmt(m);
void RegisterCXXCatchStmt(py::module_ &m);
  RegisterCXXCatchStmt(m);
void RegisterCXXForRangeStmt(py::module_ &m);
  RegisterCXXForRangeStmt(m);
void RegisterCXXTryStmt(py::module_ &m);
  RegisterCXXTryStmt(m);
void RegisterCapturedStmt(py::module_ &m);
  RegisterCapturedStmt(m);
void RegisterCaseStmt(py::module_ &m);
  RegisterCaseStmt(m);
void RegisterCompoundStmt(py::module_ &m);
  RegisterCompoundStmt(m);
void RegisterContinueStmt(py::module_ &m);
  RegisterContinueStmt(m);
void RegisterCoreturnStmt(py::module_ &m);
  RegisterCoreturnStmt(m);
void RegisterCoroutineBodyStmt(py::module_ &m);
  RegisterCoroutineBodyStmt(m);
void RegisterDeclStmt(py::module_ &m);
  RegisterDeclStmt(m);
void RegisterDefaultStmt(py::module_ &m);
  RegisterDefaultStmt(m);
void RegisterDoStmt(py::module_ &m);
  RegisterDoStmt(m);
void RegisterExpr(py::module_ &m);
  RegisterExpr(m);
void RegisterExpressionTraitExpr(py::module_ &m);
  RegisterExpressionTraitExpr(m);
void RegisterExtVectorElementExpr(py::module_ &m);
  RegisterExtVectorElementExpr(m);
void RegisterFixedPointLiteral(py::module_ &m);
  RegisterFixedPointLiteral(m);
void RegisterFloatingLiteral(py::module_ &m);
  RegisterFloatingLiteral(m);
void RegisterForStmt(py::module_ &m);
  RegisterForStmt(m);
void RegisterFullExpr(py::module_ &m);
  RegisterFullExpr(m);
void RegisterFunctionParmPackExpr(py::module_ &m);
  RegisterFunctionParmPackExpr(m);
void RegisterGCCAsmStmt(py::module_ &m);
  RegisterGCCAsmStmt(m);
void RegisterGNUNullExpr(py::module_ &m);
  RegisterGNUNullExpr(m);
void RegisterGenericSelectionExpr(py::module_ &m);
  RegisterGenericSelectionExpr(m);
void RegisterGotoStmt(py::module_ &m);
  RegisterGotoStmt(m);
void RegisterIfStmt(py::module_ &m);
  RegisterIfStmt(m);
void RegisterImaginaryLiteral(py::module_ &m);
  RegisterImaginaryLiteral(m);
void RegisterImplicitValueInitExpr(py::module_ &m);
  RegisterImplicitValueInitExpr(m);
void RegisterIndirectGotoStmt(py::module_ &m);
  RegisterIndirectGotoStmt(m);
void RegisterInitListExpr(py::module_ &m);
  RegisterInitListExpr(m);
void RegisterIntegerLiteral(py::module_ &m);
  RegisterIntegerLiteral(m);
void RegisterLabelStmt(py::module_ &m);
  RegisterLabelStmt(m);
void RegisterLambdaExpr(py::module_ &m);
  RegisterLambdaExpr(m);
void RegisterMSAsmStmt(py::module_ &m);
  RegisterMSAsmStmt(m);
void RegisterMSDependentExistsStmt(py::module_ &m);
  RegisterMSDependentExistsStmt(m);
void RegisterMSPropertyRefExpr(py::module_ &m);
  RegisterMSPropertyRefExpr(m);
void RegisterMSPropertySubscriptExpr(py::module_ &m);
  RegisterMSPropertySubscriptExpr(m);
void RegisterMaterializeTemporaryExpr(py::module_ &m);
  RegisterMaterializeTemporaryExpr(m);
void RegisterMatrixSubscriptExpr(py::module_ &m);
  RegisterMatrixSubscriptExpr(m);
void RegisterMemberExpr(py::module_ &m);
  RegisterMemberExpr(m);
void RegisterNoInitExpr(py::module_ &m);
  RegisterNoInitExpr(m);
void RegisterNullStmt(py::module_ &m);
  RegisterNullStmt(m);
void RegisterOMPArraySectionExpr(py::module_ &m);
  RegisterOMPArraySectionExpr(m);
void RegisterOMPArrayShapingExpr(py::module_ &m);
  RegisterOMPArrayShapingExpr(m);
void RegisterOMPCanonicalLoop(py::module_ &m);
  RegisterOMPCanonicalLoop(m);
void RegisterOMPExecutableDirective(py::module_ &m);
  RegisterOMPExecutableDirective(m);
void RegisterOMPFlushDirective(py::module_ &m);
  RegisterOMPFlushDirective(m);
void RegisterOMPInteropDirective(py::module_ &m);
  RegisterOMPInteropDirective(m);
void RegisterOMPIteratorExpr(py::module_ &m);
  RegisterOMPIteratorExpr(m);
void RegisterOMPLoopBasedDirective(py::module_ &m);
  RegisterOMPLoopBasedDirective(m);
void RegisterOMPLoopDirective(py::module_ &m);
  RegisterOMPLoopDirective(m);
void RegisterOMPLoopTransformationDirective(py::module_ &m);
  RegisterOMPLoopTransformationDirective(m);
void RegisterOMPMaskedDirective(py::module_ &m);
  RegisterOMPMaskedDirective(m);
void RegisterOMPMaskedTaskLoopDirective(py::module_ &m);
  RegisterOMPMaskedTaskLoopDirective(m);
void RegisterOMPMaskedTaskLoopSimdDirective(py::module_ &m);
  RegisterOMPMaskedTaskLoopSimdDirective(m);
void RegisterOMPMasterDirective(py::module_ &m);
  RegisterOMPMasterDirective(m);
void RegisterOMPMasterTaskLoopDirective(py::module_ &m);
  RegisterOMPMasterTaskLoopDirective(m);
void RegisterOMPMasterTaskLoopSimdDirective(py::module_ &m);
  RegisterOMPMasterTaskLoopSimdDirective(m);
void RegisterOMPMetaDirective(py::module_ &m);
  RegisterOMPMetaDirective(m);
void RegisterOMPOrderedDirective(py::module_ &m);
  RegisterOMPOrderedDirective(m);
void RegisterOMPParallelDirective(py::module_ &m);
  RegisterOMPParallelDirective(m);
void RegisterOMPParallelForDirective(py::module_ &m);
  RegisterOMPParallelForDirective(m);
void RegisterOMPParallelForSimdDirective(py::module_ &m);
  RegisterOMPParallelForSimdDirective(m);
void RegisterOMPParallelGenericLoopDirective(py::module_ &m);
  RegisterOMPParallelGenericLoopDirective(m);
void RegisterOMPParallelMaskedDirective(py::module_ &m);
  RegisterOMPParallelMaskedDirective(m);
void RegisterOMPParallelMaskedTaskLoopDirective(py::module_ &m);
  RegisterOMPParallelMaskedTaskLoopDirective(m);
void RegisterOMPParallelMaskedTaskLoopSimdDirective(py::module_ &m);
  RegisterOMPParallelMaskedTaskLoopSimdDirective(m);
void RegisterOMPParallelMasterDirective(py::module_ &m);
  RegisterOMPParallelMasterDirective(m);
void RegisterOMPParallelMasterTaskLoopDirective(py::module_ &m);
  RegisterOMPParallelMasterTaskLoopDirective(m);
void RegisterOMPParallelMasterTaskLoopSimdDirective(py::module_ &m);
  RegisterOMPParallelMasterTaskLoopSimdDirective(m);
void RegisterOMPParallelSectionsDirective(py::module_ &m);
  RegisterOMPParallelSectionsDirective(m);
void RegisterOMPScanDirective(py::module_ &m);
  RegisterOMPScanDirective(m);
void RegisterOMPSectionDirective(py::module_ &m);
  RegisterOMPSectionDirective(m);
void RegisterOMPSectionsDirective(py::module_ &m);
  RegisterOMPSectionsDirective(m);
void RegisterOMPSimdDirective(py::module_ &m);
  RegisterOMPSimdDirective(m);
void RegisterOMPSingleDirective(py::module_ &m);
  RegisterOMPSingleDirective(m);
void RegisterOMPTargetDataDirective(py::module_ &m);
  RegisterOMPTargetDataDirective(m);
void RegisterOMPTargetDirective(py::module_ &m);
  RegisterOMPTargetDirective(m);
void RegisterOMPTargetEnterDataDirective(py::module_ &m);
  RegisterOMPTargetEnterDataDirective(m);
void RegisterOMPTargetExitDataDirective(py::module_ &m);
  RegisterOMPTargetExitDataDirective(m);
void RegisterOMPTargetParallelDirective(py::module_ &m);
  RegisterOMPTargetParallelDirective(m);
void RegisterOMPTargetParallelForDirective(py::module_ &m);
  RegisterOMPTargetParallelForDirective(m);
void RegisterOMPTargetParallelForSimdDirective(py::module_ &m);
  RegisterOMPTargetParallelForSimdDirective(m);
void RegisterOMPTargetParallelGenericLoopDirective(py::module_ &m);
  RegisterOMPTargetParallelGenericLoopDirective(m);
void RegisterOMPTargetSimdDirective(py::module_ &m);
  RegisterOMPTargetSimdDirective(m);
void RegisterOMPTargetTeamsDirective(py::module_ &m);
  RegisterOMPTargetTeamsDirective(m);
void RegisterOMPTargetTeamsDistributeDirective(py::module_ &m);
  RegisterOMPTargetTeamsDistributeDirective(m);
void RegisterOMPTargetTeamsDistributeParallelForDirective(py::module_ &m);
  RegisterOMPTargetTeamsDistributeParallelForDirective(m);
void RegisterOMPTargetTeamsDistributeParallelForSimdDirective(py::module_ &m);
  RegisterOMPTargetTeamsDistributeParallelForSimdDirective(m);
void RegisterOMPTargetTeamsDistributeSimdDirective(py::module_ &m);
  RegisterOMPTargetTeamsDistributeSimdDirective(m);
void RegisterOMPTargetTeamsGenericLoopDirective(py::module_ &m);
  RegisterOMPTargetTeamsGenericLoopDirective(m);
void RegisterOMPTargetUpdateDirective(py::module_ &m);
  RegisterOMPTargetUpdateDirective(m);
void RegisterOMPTaskDirective(py::module_ &m);
  RegisterOMPTaskDirective(m);
void RegisterOMPTaskLoopDirective(py::module_ &m);
  RegisterOMPTaskLoopDirective(m);
void RegisterOMPTaskLoopSimdDirective(py::module_ &m);
  RegisterOMPTaskLoopSimdDirective(m);
void RegisterOMPTaskgroupDirective(py::module_ &m);
  RegisterOMPTaskgroupDirective(m);
void RegisterOMPTaskwaitDirective(py::module_ &m);
  RegisterOMPTaskwaitDirective(m);
void RegisterOMPTaskyieldDirective(py::module_ &m);
  RegisterOMPTaskyieldDirective(m);
void RegisterOMPTeamsDirective(py::module_ &m);
  RegisterOMPTeamsDirective(m);
void RegisterOMPTeamsDistributeDirective(py::module_ &m);
  RegisterOMPTeamsDistributeDirective(m);
void RegisterOMPTeamsDistributeParallelForDirective(py::module_ &m);
  RegisterOMPTeamsDistributeParallelForDirective(m);
void RegisterOMPTeamsDistributeParallelForSimdDirective(py::module_ &m);
  RegisterOMPTeamsDistributeParallelForSimdDirective(m);
void RegisterOMPTeamsDistributeSimdDirective(py::module_ &m);
  RegisterOMPTeamsDistributeSimdDirective(m);
void RegisterOMPTeamsGenericLoopDirective(py::module_ &m);
  RegisterOMPTeamsGenericLoopDirective(m);
void RegisterOMPTileDirective(py::module_ &m);
  RegisterOMPTileDirective(m);
void RegisterOMPUnrollDirective(py::module_ &m);
  RegisterOMPUnrollDirective(m);
void RegisterObjCArrayLiteral(py::module_ &m);
  RegisterObjCArrayLiteral(m);
void RegisterObjCAtCatchStmt(py::module_ &m);
  RegisterObjCAtCatchStmt(m);
void RegisterObjCAtFinallyStmt(py::module_ &m);
  RegisterObjCAtFinallyStmt(m);
void RegisterObjCAtSynchronizedStmt(py::module_ &m);
  RegisterObjCAtSynchronizedStmt(m);
void RegisterObjCAtThrowStmt(py::module_ &m);
  RegisterObjCAtThrowStmt(m);
void RegisterObjCAtTryStmt(py::module_ &m);
  RegisterObjCAtTryStmt(m);
void RegisterObjCAutoreleasePoolStmt(py::module_ &m);
  RegisterObjCAutoreleasePoolStmt(m);
void RegisterObjCAvailabilityCheckExpr(py::module_ &m);
  RegisterObjCAvailabilityCheckExpr(m);
void RegisterObjCBoolLiteralExpr(py::module_ &m);
  RegisterObjCBoolLiteralExpr(m);
void RegisterObjCBoxedExpr(py::module_ &m);
  RegisterObjCBoxedExpr(m);
void RegisterObjCDictionaryLiteral(py::module_ &m);
  RegisterObjCDictionaryLiteral(m);
void RegisterObjCEncodeExpr(py::module_ &m);
  RegisterObjCEncodeExpr(m);
void RegisterObjCForCollectionStmt(py::module_ &m);
  RegisterObjCForCollectionStmt(m);
void RegisterObjCIndirectCopyRestoreExpr(py::module_ &m);
  RegisterObjCIndirectCopyRestoreExpr(m);
void RegisterObjCIsaExpr(py::module_ &m);
  RegisterObjCIsaExpr(m);
void RegisterObjCIvarRefExpr(py::module_ &m);
  RegisterObjCIvarRefExpr(m);
void RegisterObjCMessageExpr(py::module_ &m);
  RegisterObjCMessageExpr(m);
void RegisterObjCPropertyRefExpr(py::module_ &m);
  RegisterObjCPropertyRefExpr(m);
void RegisterObjCProtocolExpr(py::module_ &m);
  RegisterObjCProtocolExpr(m);
void RegisterObjCSelectorExpr(py::module_ &m);
  RegisterObjCSelectorExpr(m);
void RegisterObjCStringLiteral(py::module_ &m);
  RegisterObjCStringLiteral(m);
void RegisterObjCSubscriptRefExpr(py::module_ &m);
  RegisterObjCSubscriptRefExpr(m);
void RegisterOffsetOfExpr(py::module_ &m);
  RegisterOffsetOfExpr(m);
void RegisterOpaqueValueExpr(py::module_ &m);
  RegisterOpaqueValueExpr(m);
void RegisterOverloadExpr(py::module_ &m);
  RegisterOverloadExpr(m);
void RegisterPackExpansionExpr(py::module_ &m);
  RegisterPackExpansionExpr(m);
void RegisterParenExpr(py::module_ &m);
  RegisterParenExpr(m);
void RegisterParenListExpr(py::module_ &m);
  RegisterParenListExpr(m);
void RegisterPredefinedExpr(py::module_ &m);
  RegisterPredefinedExpr(m);
void RegisterPseudoObjectExpr(py::module_ &m);
  RegisterPseudoObjectExpr(m);
void RegisterRecoveryExpr(py::module_ &m);
  RegisterRecoveryExpr(m);
void RegisterRequiresExpr(py::module_ &m);
  RegisterRequiresExpr(m);
void RegisterReturnStmt(py::module_ &m);
  RegisterReturnStmt(m);
void RegisterSEHExceptStmt(py::module_ &m);
  RegisterSEHExceptStmt(m);
void RegisterSEHFinallyStmt(py::module_ &m);
  RegisterSEHFinallyStmt(m);
void RegisterSEHLeaveStmt(py::module_ &m);
  RegisterSEHLeaveStmt(m);
void RegisterSEHTryStmt(py::module_ &m);
  RegisterSEHTryStmt(m);
void RegisterSYCLUniqueStableNameExpr(py::module_ &m);
  RegisterSYCLUniqueStableNameExpr(m);
void RegisterShuffleVectorExpr(py::module_ &m);
  RegisterShuffleVectorExpr(m);
void RegisterSizeOfPackExpr(py::module_ &m);
  RegisterSizeOfPackExpr(m);
void RegisterSourceLocExpr(py::module_ &m);
  RegisterSourceLocExpr(m);
void RegisterStmtExpr(py::module_ &m);
  RegisterStmtExpr(m);
void RegisterStringLiteral(py::module_ &m);
  RegisterStringLiteral(m);
void RegisterSubstNonTypeTemplateParmExpr(py::module_ &m);
  RegisterSubstNonTypeTemplateParmExpr(m);
void RegisterSubstNonTypeTemplateParmPackExpr(py::module_ &m);
  RegisterSubstNonTypeTemplateParmPackExpr(m);
void RegisterTypeTraitExpr(py::module_ &m);
  RegisterTypeTraitExpr(m);
void RegisterTypoExpr(py::module_ &m);
  RegisterTypoExpr(m);
void RegisterUnaryExprOrTypeTraitExpr(py::module_ &m);
  RegisterUnaryExprOrTypeTraitExpr(m);
void RegisterUnaryOperator(py::module_ &m);
  RegisterUnaryOperator(m);
void RegisterUnresolvedLookupExpr(py::module_ &m);
  RegisterUnresolvedLookupExpr(m);
void RegisterUnresolvedMemberExpr(py::module_ &m);
  RegisterUnresolvedMemberExpr(m);
void RegisterVAArgExpr(py::module_ &m);
  RegisterVAArgExpr(m);
void RegisterAbstractConditionalOperator(py::module_ &m);
  RegisterAbstractConditionalOperator(m);
void RegisterAddrLabelExpr(py::module_ &m);
  RegisterAddrLabelExpr(m);
void RegisterArrayInitIndexExpr(py::module_ &m);
  RegisterArrayInitIndexExpr(m);
void RegisterArrayInitLoopExpr(py::module_ &m);
  RegisterArrayInitLoopExpr(m);
void RegisterArraySubscriptExpr(py::module_ &m);
  RegisterArraySubscriptExpr(m);
void RegisterArrayTypeTraitExpr(py::module_ &m);
  RegisterArrayTypeTraitExpr(m);
void RegisterAsTypeExpr(py::module_ &m);
  RegisterAsTypeExpr(m);
void RegisterAtomicExpr(py::module_ &m);
  RegisterAtomicExpr(m);
void RegisterBinaryConditionalOperator(py::module_ &m);
  RegisterBinaryConditionalOperator(m);
void RegisterBinaryOperator(py::module_ &m);
  RegisterBinaryOperator(m);
void RegisterBlockExpr(py::module_ &m);
  RegisterBlockExpr(m);
void RegisterCXXBindTemporaryExpr(py::module_ &m);
  RegisterCXXBindTemporaryExpr(m);
void RegisterCXXBoolLiteralExpr(py::module_ &m);
  RegisterCXXBoolLiteralExpr(m);
void RegisterCXXConstructExpr(py::module_ &m);
  RegisterCXXConstructExpr(m);
void RegisterCXXDefaultArgExpr(py::module_ &m);
  RegisterCXXDefaultArgExpr(m);
void RegisterCXXDefaultInitExpr(py::module_ &m);
  RegisterCXXDefaultInitExpr(m);
void RegisterCXXDeleteExpr(py::module_ &m);
  RegisterCXXDeleteExpr(m);
void RegisterCXXDependentScopeMemberExpr(py::module_ &m);
  RegisterCXXDependentScopeMemberExpr(m);
void RegisterCXXFoldExpr(py::module_ &m);
  RegisterCXXFoldExpr(m);
void RegisterCXXInheritedCtorInitExpr(py::module_ &m);
  RegisterCXXInheritedCtorInitExpr(m);
void RegisterCXXNewExpr(py::module_ &m);
  RegisterCXXNewExpr(m);
void RegisterCXXNoexceptExpr(py::module_ &m);
  RegisterCXXNoexceptExpr(m);
void RegisterCXXNullPtrLiteralExpr(py::module_ &m);
  RegisterCXXNullPtrLiteralExpr(m);
void RegisterCXXParenListInitExpr(py::module_ &m);
  RegisterCXXParenListInitExpr(m);
void RegisterCXXPseudoDestructorExpr(py::module_ &m);
  RegisterCXXPseudoDestructorExpr(m);
void RegisterCXXRewrittenBinaryOperator(py::module_ &m);
  RegisterCXXRewrittenBinaryOperator(m);
void RegisterCXXScalarValueInitExpr(py::module_ &m);
  RegisterCXXScalarValueInitExpr(m);
void RegisterCXXStdInitializerListExpr(py::module_ &m);
  RegisterCXXStdInitializerListExpr(m);
void RegisterCXXTemporaryObjectExpr(py::module_ &m);
  RegisterCXXTemporaryObjectExpr(m);
void RegisterCXXThisExpr(py::module_ &m);
  RegisterCXXThisExpr(m);
void RegisterCXXThrowExpr(py::module_ &m);
  RegisterCXXThrowExpr(m);
void RegisterCXXTypeidExpr(py::module_ &m);
  RegisterCXXTypeidExpr(m);
void RegisterCXXUnresolvedConstructExpr(py::module_ &m);
  RegisterCXXUnresolvedConstructExpr(m);
void RegisterCXXUuidofExpr(py::module_ &m);
  RegisterCXXUuidofExpr(m);
void RegisterCallExpr(py::module_ &m);
  RegisterCallExpr(m);
void RegisterCastExpr(py::module_ &m);
  RegisterCastExpr(m);
void RegisterCharacterLiteral(py::module_ &m);
  RegisterCharacterLiteral(m);
void RegisterChooseExpr(py::module_ &m);
  RegisterChooseExpr(m);
void RegisterCompoundAssignOperator(py::module_ &m);
  RegisterCompoundAssignOperator(m);
void RegisterCompoundLiteralExpr(py::module_ &m);
  RegisterCompoundLiteralExpr(m);
void RegisterConceptSpecializationExpr(py::module_ &m);
  RegisterConceptSpecializationExpr(m);
void RegisterConditionalOperator(py::module_ &m);
  RegisterConditionalOperator(m);
void RegisterConstantExpr(py::module_ &m);
  RegisterConstantExpr(m);
void RegisterConvertVectorExpr(py::module_ &m);
  RegisterConvertVectorExpr(m);
void RegisterCoroutineSuspendExpr(py::module_ &m);
  RegisterCoroutineSuspendExpr(m);
void RegisterCoyieldExpr(py::module_ &m);
  RegisterCoyieldExpr(m);
void RegisterDeclRefExpr(py::module_ &m);
  RegisterDeclRefExpr(m);
void RegisterDependentCoawaitExpr(py::module_ &m);
  RegisterDependentCoawaitExpr(m);
void RegisterDependentScopeDeclRefExpr(py::module_ &m);
  RegisterDependentScopeDeclRefExpr(m);
void RegisterDesignatedInitExpr(py::module_ &m);
  RegisterDesignatedInitExpr(m);
void RegisterDesignatedInitUpdateExpr(py::module_ &m);
  RegisterDesignatedInitUpdateExpr(m);
void RegisterExplicitCastExpr(py::module_ &m);
  RegisterExplicitCastExpr(m);
void RegisterExprWithCleanups(py::module_ &m);
  RegisterExprWithCleanups(m);
void RegisterImplicitCastExpr(py::module_ &m);
  RegisterImplicitCastExpr(m);
void RegisterOMPAtomicDirective(py::module_ &m);
  RegisterOMPAtomicDirective(m);
void RegisterOMPBarrierDirective(py::module_ &m);
  RegisterOMPBarrierDirective(m);
void RegisterOMPCancelDirective(py::module_ &m);
  RegisterOMPCancelDirective(m);
void RegisterOMPCancellationPointDirective(py::module_ &m);
  RegisterOMPCancellationPointDirective(m);
void RegisterOMPCriticalDirective(py::module_ &m);
  RegisterOMPCriticalDirective(m);
void RegisterOMPDepobjDirective(py::module_ &m);
  RegisterOMPDepobjDirective(m);
void RegisterOMPDispatchDirective(py::module_ &m);
  RegisterOMPDispatchDirective(m);
void RegisterOMPDistributeDirective(py::module_ &m);
  RegisterOMPDistributeDirective(m);
void RegisterOMPDistributeParallelForDirective(py::module_ &m);
  RegisterOMPDistributeParallelForDirective(m);
void RegisterOMPDistributeParallelForSimdDirective(py::module_ &m);
  RegisterOMPDistributeParallelForSimdDirective(m);
void RegisterOMPDistributeSimdDirective(py::module_ &m);
  RegisterOMPDistributeSimdDirective(m);
void RegisterOMPErrorDirective(py::module_ &m);
  RegisterOMPErrorDirective(m);
void RegisterOMPForDirective(py::module_ &m);
  RegisterOMPForDirective(m);
void RegisterOMPForSimdDirective(py::module_ &m);
  RegisterOMPForSimdDirective(m);
void RegisterOMPGenericLoopDirective(py::module_ &m);
  RegisterOMPGenericLoopDirective(m);
void RegisterObjCBridgedCastExpr(py::module_ &m);
  RegisterObjCBridgedCastExpr(m);
void RegisterUserDefinedLiteral(py::module_ &m);
  RegisterUserDefinedLiteral(m);
void RegisterBuiltinBitCastExpr(py::module_ &m);
  RegisterBuiltinBitCastExpr(m);
void RegisterCStyleCastExpr(py::module_ &m);
  RegisterCStyleCastExpr(m);
void RegisterCUDAKernelCallExpr(py::module_ &m);
  RegisterCUDAKernelCallExpr(m);
void RegisterCXXFunctionalCastExpr(py::module_ &m);
  RegisterCXXFunctionalCastExpr(m);
void RegisterCXXMemberCallExpr(py::module_ &m);
  RegisterCXXMemberCallExpr(m);
void RegisterCXXNamedCastExpr(py::module_ &m);
  RegisterCXXNamedCastExpr(m);
void RegisterCXXOperatorCallExpr(py::module_ &m);
  RegisterCXXOperatorCallExpr(m);
void RegisterCXXReinterpretCastExpr(py::module_ &m);
  RegisterCXXReinterpretCastExpr(m);
void RegisterCXXStaticCastExpr(py::module_ &m);
  RegisterCXXStaticCastExpr(m);
void RegisterCoawaitExpr(py::module_ &m);
  RegisterCoawaitExpr(m);
void RegisterCXXAddrspaceCastExpr(py::module_ &m);
  RegisterCXXAddrspaceCastExpr(m);
void RegisterCXXConstCastExpr(py::module_ &m);
  RegisterCXXConstCastExpr(m);
void RegisterCXXDynamicCastExpr(py::module_ &m);
  RegisterCXXDynamicCastExpr(m);
void RegisterType(py::module_ &m);
  RegisterType(m);
void RegisterTypeOfExprType(py::module_ &m);
  RegisterTypeOfExprType(m);
void RegisterTypeOfType(py::module_ &m);
  RegisterTypeOfType(m);
void RegisterTypedefType(py::module_ &m);
  RegisterTypedefType(m);
void RegisterUnaryTransformType(py::module_ &m);
  RegisterUnaryTransformType(m);
void RegisterUnresolvedUsingType(py::module_ &m);
  RegisterUnresolvedUsingType(m);
void RegisterUsingType(py::module_ &m);
  RegisterUsingType(m);
void RegisterVectorType(py::module_ &m);
  RegisterVectorType(m);
void RegisterTypeWithKeyword(py::module_ &m);
  RegisterTypeWithKeyword(m);
void RegisterAdjustedType(py::module_ &m);
  RegisterAdjustedType(m);
void RegisterArrayType(py::module_ &m);
  RegisterArrayType(m);
void RegisterAtomicType(py::module_ &m);
  RegisterAtomicType(m);
void RegisterAttributedType(py::module_ &m);
  RegisterAttributedType(m);
void RegisterBTFTagAttributedType(py::module_ &m);
  RegisterBTFTagAttributedType(m);
void RegisterBitIntType(py::module_ &m);
  RegisterBitIntType(m);
void RegisterBlockPointerType(py::module_ &m);
  RegisterBlockPointerType(m);
void RegisterBuiltinType(py::module_ &m);
  RegisterBuiltinType(m);
void RegisterComplexType(py::module_ &m);
  RegisterComplexType(m);
void RegisterConstantArrayType(py::module_ &m);
  RegisterConstantArrayType(m);
void RegisterDecayedType(py::module_ &m);
  RegisterDecayedType(m);
void RegisterDecltypeType(py::module_ &m);
  RegisterDecltypeType(m);
void RegisterDeducedType(py::module_ &m);
  RegisterDeducedType(m);
void RegisterDependentAddressSpaceType(py::module_ &m);
  RegisterDependentAddressSpaceType(m);
void RegisterDependentBitIntType(py::module_ &m);
  RegisterDependentBitIntType(m);
void RegisterDependentNameType(py::module_ &m);
  RegisterDependentNameType(m);
void RegisterDependentSizedArrayType(py::module_ &m);
  RegisterDependentSizedArrayType(m);
void RegisterDependentSizedExtVectorType(py::module_ &m);
  RegisterDependentSizedExtVectorType(m);
void RegisterDependentTemplateSpecializationType(py::module_ &m);
  RegisterDependentTemplateSpecializationType(m);
void RegisterDependentVectorType(py::module_ &m);
  RegisterDependentVectorType(m);
void RegisterElaboratedType(py::module_ &m);
  RegisterElaboratedType(m);
void RegisterExtVectorType(py::module_ &m);
  RegisterExtVectorType(m);
void RegisterFunctionType(py::module_ &m);
  RegisterFunctionType(m);
void RegisterIncompleteArrayType(py::module_ &m);
  RegisterIncompleteArrayType(m);
void RegisterInjectedClassNameType(py::module_ &m);
  RegisterInjectedClassNameType(m);
void RegisterMacroQualifiedType(py::module_ &m);
  RegisterMacroQualifiedType(m);
void RegisterMatrixType(py::module_ &m);
  RegisterMatrixType(m);
void RegisterMemberPointerType(py::module_ &m);
  RegisterMemberPointerType(m);
void RegisterObjCObjectPointerType(py::module_ &m);
  RegisterObjCObjectPointerType(m);
void RegisterObjCObjectType(py::module_ &m);
  RegisterObjCObjectType(m);
void RegisterObjCTypeParamType(py::module_ &m);
  RegisterObjCTypeParamType(m);
void RegisterPackExpansionType(py::module_ &m);
  RegisterPackExpansionType(m);
void RegisterParenType(py::module_ &m);
  RegisterParenType(m);
void RegisterPipeType(py::module_ &m);
  RegisterPipeType(m);
void RegisterPointerType(py::module_ &m);
  RegisterPointerType(m);
void RegisterQualifiedType(py::module_ &m);
  RegisterQualifiedType(m);
void RegisterReferenceType(py::module_ &m);
  RegisterReferenceType(m);
void RegisterSubstTemplateTypeParmPackType(py::module_ &m);
  RegisterSubstTemplateTypeParmPackType(m);
void RegisterSubstTemplateTypeParmType(py::module_ &m);
  RegisterSubstTemplateTypeParmType(m);
void RegisterTagType(py::module_ &m);
  RegisterTagType(m);
void RegisterTemplateSpecializationType(py::module_ &m);
  RegisterTemplateSpecializationType(m);
void RegisterTemplateTypeParmType(py::module_ &m);
  RegisterTemplateTypeParmType(m);
void RegisterVariableArrayType(py::module_ &m);
  RegisterVariableArrayType(m);
void RegisterAutoType(py::module_ &m);
  RegisterAutoType(m);
void RegisterConstantMatrixType(py::module_ &m);
  RegisterConstantMatrixType(m);
void RegisterDeducedTemplateSpecializationType(py::module_ &m);
  RegisterDeducedTemplateSpecializationType(m);
void RegisterDependentSizedMatrixType(py::module_ &m);
  RegisterDependentSizedMatrixType(m);
void RegisterEnumType(py::module_ &m);
  RegisterEnumType(m);
void RegisterFunctionNoProtoType(py::module_ &m);
  RegisterFunctionNoProtoType(m);
void RegisterFunctionProtoType(py::module_ &m);
  RegisterFunctionProtoType(m);
void RegisterLValueReferenceType(py::module_ &m);
  RegisterLValueReferenceType(m);
void RegisterObjCInterfaceType(py::module_ &m);
  RegisterObjCInterfaceType(m);
void RegisterRValueReferenceType(py::module_ &m);
  RegisterRValueReferenceType(m);
void RegisterRecordType(py::module_ &m);
  RegisterRecordType(m);
}
} // namespace pasta
