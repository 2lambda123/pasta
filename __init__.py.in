# Copyright 2020 Trail of Bits, all rights reserved.

from pasta_internal import *

_PASTA_HOST_CC = "@CMAKE_C_COMPILER@"
_PASTA_HOST_CXX = "@CMAKE_CXX_COMPILER@"
_PASTA_HOST_CC_VERSION_INFO = @CSTR_HOST_CC_VERSION_INFO@
_PASTA_HOST_CC_VERSION_INFO_FAKE_SYSROOT = @CSTR_HOST_CC_VERSION_INFO_FAKE_SYSROOT@
_PASTA_HOST_CXX_VERSION_INFO = @CSTR_HOST_CXX_VERSION_INFO@
_PASTA_HOST_CXX_VERSION_INFO_FAKE_SYSROOT = @CSTR_HOST_CXX_VERSION_INFO_FAKE_SYSROOT@
_PASTA_HOST_WORKING_DIR = "@CMAKE_CURRENT_BINARY_DIR@"
_PASTA_HOST_TARGET_FILE = "@PASTA_DUMMY_SOURCE_FILE@"

LANG_C = 0
LANG_CXX = 1

COMPILER_APPLE_CLANG = 0
COMPILER_CLANG = 1
COMPILER_CLANG_CL = 2
COMPILER_GNU = 3
COMPILER_MINGW = 4
COMPILER_CL = 5

_PASTA_HOST_COMPILER = (
  (COMPILER_CLANG, LANG_C, _PASTA_HOST_CC, _PASTA_HOST_CC_VERSION_INFO, _PASTA_HOST_CC_VERSION_INFO_FAKE_SYSROOT, _PASTA_HOST_WORKING_DIR),
  (COMPILER_CLANG, LANG_CXX, _PASTA_HOST_CXX, _PASTA_HOST_CXX_VERSION_INFO, _PASTA_HOST_CXX_VERSION_INFO_FAKE_SYSROOT, _PASTA_HOST_WORKING_DIR)
)

def HostCompiler(language=LANG_CXX):
  """Return a `Compiler` configured to match the host compiler which compiled the Pasta module itself."""
  return Compiler(*_PASTA_HOST_COMPILER[language])

